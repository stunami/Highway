<?php
namespace Versionable\Highway\Browser;

use Versionable\Highway\History\HistoryInterface;

/**
 * Test class for Browser.
 * Generated by PHPUnit on 2011-04-03 at 16:11:50.
 */
class BrowserTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Browser
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
      $client = $this->getMock('Versionable\Prospect\Client\ClientInterface');
      $history = $this->getMock('Versionable\Highway\History\HistoryInterface');
      
      $this->object = new Browser($client, $history);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @todo Implement testGet().
     */
    public function testGet()
    {
      $response = $this->getMock('Versionable\Prospect\Response\ResponseInterface');
      $response->expects($this->any())->method('getCode')->will($this->returnValue(200));
      $response->expects($this->any())->method('getContent')->will($this->returnValue('Test content'));
      $response->expects($this->any())->method('getHeaders')->will($this->returnValue(array()));
      
      $client = $this->object->getClient();
      $client->expects($this->any())->method('send')->will($this->returnValue($response));

      $request = $this->getMock('Versionable\Prospect\Request\RequestInterface');

      $this->assertEquals($response, $this->object->get($request, $response));

    }

    /**
     * @todo Implement testGetClient().
     */
    public function testGetClient()
    {
      $this->assertEquals($this->readAttribute($this->object, 'client'), $this->object->getClient());
    }

    /**
     * @todo Implement testSetClient().
     */
    public function testSetClient()
    {
      $client = $this->getMock('Versionable\Prospect\Client\ClientInterface');
      $this->object->setClient($client);
      $this->assertEquals($client, $this->readAttribute($this->object, 'client'));
    }

    /**
     * @todo Implement testGetHistory().
     */
    public function testGetHistory()
    {
      $this->assertEquals($this->readAttribute($this->object, 'history'), $this->object->getHistory());
    }

    /**
     * @todo Implement testSetHistory().
     */
    public function testSetHistory()
    {
      $history = $this->getMock('Versionable\Highway\History\HistoryInterface');
      $this->object->setHistory($history);
      $this->assertEquals($history, $this->readAttribute($this->object, 'history'));
    }
}
